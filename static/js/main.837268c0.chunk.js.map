{"version":3,"sources":["component/Game/index.js","component/Pipe/index.js","component/Bird/index.js","component/Foreground/index.js","rerducers/pipe.js","component/App.js","rerducers/bird.js","rerducers/index.js","rerducers/game.js","index.js","store.js"],"names":["gameLoop","pipeGenerator","connect","pipe","x","pipes","className","map","i","topHeight","style","position","key","left","height","bird","y","r","console","log","top","transform","Foreground","initialState","check","dispatch","getState","state","birdY","challenge","x1","y1","x2","y2","filter","type","length","mapDispatchToProps","start","game","status","setInterval","fly","clearInterval","useEffect","document","addEventListener","e","keyCode","App","store","combineReducers","Math","round","random","createStore","rootReducer","applyMiddleware","thunk","render","getElementById"],"mappings":"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","file":"static/js/main.837268c0.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './style.scss';\r\nimport Pipe from '../Pipe';\r\nimport Bird from '../Bird';\r\nimport Foreground from '../Foreground';\r\n\r\nimport { connect } from 'react-redux';\r\nimport pipe from '../../rerducers/pipe';\r\n\r\nlet gameLoop;\r\nlet pipeGenerator;\r\nconst Game = ({ status, start, fly }) => {\r\n  if (status === 'game_over') {\r\n    clearInterval(gameLoop);\r\n    clearInterval(pipeGenerator);\r\n  }\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (e.keyCode === 32) {\r\n        fly();\r\n      }\r\n      if (status !== 'playing') {\r\n        start();\r\n      }\r\n    };\r\n    document.addEventListener('keypress', handleKeyPress);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"game-wrapper\">\r\n      <Bird />\r\n      <Pipe />\r\n      <Foreground />\r\n    </div>\r\n  );\r\n};\r\nconst fly = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'FLY' });\r\n  };\r\n};\r\nconst start = () => {\r\n  return (dispatch, getState) => {\r\n    const { status } = getState().game;\r\n\r\n    if (status !== 'playing') {\r\n      gameLoop = setInterval(() => {\r\n        dispatch({ type: 'FALL' });\r\n        dispatch({ type: 'RUNNING' });\r\n        check(dispatch, getState);\r\n      }, 300);\r\n      pipeGenerator = setInterval(() => {\r\n        dispatch({ type: 'GENETARE' });\r\n      }, 200);\r\n      dispatch({ type: 'START' });\r\n    }\r\n  };\r\n};\r\nconst check = (dispatch, getState) => {\r\n  const state = getState();\r\n  const birdY = state.bird.y;\r\n  const pipes = state.pipe.pipes;\r\n  const x = state.pipe.x;\r\n\r\n  const challenge = pipes\r\n    .map(({ topHeight }, i) => {\r\n      return {\r\n        x1: x + i * 200,\r\n        y1: topHeight,\r\n        x2: x + i * 200,\r\n        y2: topHeight + 100,\r\n      };\r\n    })\r\n    .filter(({ x1 }) => {\r\n      if (x1 > 0 && x1 < 288) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n  if (birdY > 512 - 108) {\r\n    dispatch({ type: 'GAMEOVER' });\r\n  }\r\n\r\n  if (challenge.length) {\r\n    const { x1, y1, x2, y2 } = challenge[0];\r\n\r\n    if (\r\n      (x1 < 120 && 120 < x1 + 52 && birdY < y1) ||\r\n      (x2 < 120 && 120 < x2 + 52 && birdY > y2)\r\n    ) {\r\n      dispatch({ type: 'GAMEOVER' });\r\n    }\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ game }) => ({ status: game.status });\r\nconst mapDispatchToProps = { start, fly };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Pipe = ({ x, pipes }) => {\r\n  return (\r\n    <div className=\"pipe-wrapper\">\r\n      {pipes.map(({ topHeight }, i) => (\r\n        <div style={{ position: 'relative' }}>\r\n          <div\r\n            key={`pipe-${i}`}\r\n            className=\"pipe-top\"\r\n            style={{\r\n              left: x + i * 200,\r\n              height: topHeight,\r\n            }}\r\n          ></div>\r\n          <div\r\n            className=\"pipe-bottom\"\r\n            style={{\r\n              left: x + i * 200,\r\n              height: topHeight + 100,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ pipe }) => ({ x: pipe.x, pipes: pipe.pipes });\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pipe);\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\nconst Bird = ({ y, r }) => {\r\n  console.log('y :>> ', y);\r\n  return (\r\n    <div\r\n      className=\"bird-wrapper\"\r\n      style={{ top: y, transform: `rotate(${r}deg)` }}\r\n    ></div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ bird }) => ({ y: bird.y, r: bird.r });\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bird);\r\n","import React from 'react';\r\nimport './style.scss';\r\nconst Foreground = () => {\r\n  return <div className='foreground-wrapper'></div>;\r\n};\r\n\r\nexport default Foreground;\r\n","const initialState = {\r\n  x: 300,\r\n  pipes: [],\r\n};\r\n\r\nexport default (state = initialState, { type } = {}) => {\r\n  switch (type) {\r\n    case 'RUNNING':\r\n      if (!state.pipes.length) {\r\n        return state;\r\n      }\r\n      return { ...state, x: state.x - 10 };\r\n    case 'GENETARE':\r\n      const topHeight = Math.round(Math.random() * 200);\r\n      return { ...state, pipes: [...state.pipes, { topHeight }] };\r\n    case 'GAMEOVER':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Game from './Game';\r\nimport { Provider } from 'react-redux';\r\nconst App = ({ store }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Game />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const initialState = {\r\n  y: 250,\r\n  r: 0,\r\n};\r\n\r\nexport default (state = initialState, { type } = {}) => {\r\n  switch (type) {\r\n    case 'FLY':\r\n      return { ...state, y: state.y - 50, r: -30 };\r\n    case 'FALL':\r\n      return { ...state, y: state.y + 20, r: 30 };\r\n    case 'GAMEOVER':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport game from './game';\r\nimport bird from './bird';\r\nimport pipe from './pipe';\r\nexport default combineReducers({\r\n  game,\r\n  bird,\r\n  pipe,\r\n});\r\n","export default (state = {}, { type } = {}) => {\r\n  switch (type) {\r\n    case 'START':\r\n      return { ...state, status: 'playing' };\r\n    case 'GAMEOVER':\r\n      return { ...state, status: 'game_over' };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './component/App';\r\nimport configureStore from './store';\r\nconst store = configureStore();\r\nrender(<App store={store} />, document.getElementById('app'));\r\n","import { configureStore, applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rerducers';\r\nexport default () => {\r\n  const store = createStore(rootReducer, applyMiddleware(thunk));\r\n  return store;\r\n};\r\n"],"sourceRoot":""}